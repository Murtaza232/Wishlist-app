{%- comment -%} Wishlist Icon Example and Ratings removed from storefront output {%- endcomment -%}

<!-- Unique div to detect if extension is enabled -->
<div id="wishlist-extension-status-detector" class="wishlist-extension-enabled" style="display: none; position: absolute; left: -9999px; top: -9999px;"></div>

<script>

  // Removed: window.wishlistIconType, window.wishlistAddBtnIconType, and any icon-related extension settings
  window.wishlistEnable=true;
  window.wishlistButtonIcon = "{{ block.settings.icon | default: '' }}";
  window.wishlistCustomIcon = "{% if block.settings.icon_add != blank %}{{ block.settings.icon_add | image_url: width: 48 }}{% endif %}";
  window.wishlistButtonPosition = "{{ block.settings.button_position | default: '' }}";
  window.wishlistButtonSize = "{{ block.settings.button_size | default: 24 }}";
  window.wishlistIconColor = "{{ block.settings.icon_color | default: '#000000' }}";
  window.wishlistIconThickness = "{{ block.settings.icon_thickness | default: 1.7 }}";
  window.wishlistPrimaryFontSize = "{{ block.settings.variant_selector_primary_font_size | default: 14 }}";
  window.wishlistSecondaryFontSize = "{{ block.settings.variant_selector_secondary_font_size | default: 12 }}";
  window.wishlistAddBtnFontColor = "{{ block.settings.add_to_wishlist_btn_font_color | default: '#e5e5e5' }}";
  window.wishlistAddBtnCornerRadius = "{{ block.settings.corner_radius | default: 8 }}";
  window.add_to_wishlist_btn_bg_color="{{block.settings.add_to_wishlist_btn_bg_color | default: '#e5e5e5'}}";
   window.wishlistProductLinkSelector = "{{ block.settings.product_link_selector | escape }}";
  window.wishlistProductLinkSelectorForProductPage = "{{ block.settings.product_link_selector_product_page | escape }}";
  window.wishlistHeaderSelector = "{{ block.settings.wislist_header_selector | escape }}";
  window.wishlistNavSelector = "{{ block.settings.wishlist_nav_selector | escape }}";
  window.wishlistAddToWishlistSelector = "{{ block.settings.add_wishlist_selector | escape }}";
  window.wishlistAddToWishlistProductPage="{{block.settings.add_wishlist_selector_product_image}}";
  window.wishlistCartItemSelector = "{{ block.settings.wishlist_cart_item_selector | escape }}";
  window.wishlistCartRemoveSelector = "{{ block.settings.wishlist_cart_remove_selector | escape }}";
  // Smart Save will be controlled via metafields
  window.wishlistSmartSaveEnabled = true; // Always enable, but check metafields for actual setting
  
  // Debug logging
  console.log('[WISHLIST CONFIG] Configuration block loaded');
  console.log('[WISHLIST CONFIG] Current URL:', window.location.pathname);
  console.log('[WISHLIST CONFIG] Is product page:', window.location.pathname.indexOf('/products/') !== -1);
</script>
<script>
function isProductPage() {
  return window.location.pathname.indexOf('/products/') !== -1;
}

// Call the API as early as possible
(function() {
  var defaultSettings = {
    buttonPosition: window.wishlistButtonPosition || '',
    buttonSize: window.wishlistButtonSize || 24,
    iconColor: window.wishlistIconColor || '#000000',
    iconThickness: window.wishlistIconThickness || 1.7,
    primaryFontSize: window.wishlistPrimaryFontSize || 14,
    secondaryFontSize: window.wishlistSecondaryFontSize || 12
  };
  fetch('https://phpstack-362288-5709690.cloudwaysapps.com/api/wishlist-metafields')
    .then(response => response.json())
    .then(function(response) {
      var metafields = {};
      var metafieldsEdges = response.metafields || [];
      metafieldsEdges.forEach(function(edge) {
        metafields[edge.node.key] = edge.node.value;
      });
      // Set global metafield fallbacks
      window.wishlistMetafieldIconType = metafields['icon_type'] || '';
      window.wishlistMetafieldPrimaryColor = metafields['primary_color'] || '';
      window.wishlistMetafieldSecondaryColor = metafields['secondary_color'] || '';
      var iconType = metafields['icon_type']; // Only use API value
      // Button position: extension first (unless empty or 'Select Position'), then API, then fallback
      var buttonPosition = (
        window.wishlistButtonPosition &&
        window.wishlistButtonPosition !== '' &&
        window.wishlistButtonPosition !== 'Select Position'
      )
        ? window.wishlistButtonPosition
        : (metafields['btn_position_on_product_page']
            ? metafields['btn_position_on_product_page'].replace('_', '-')
            : 'top-right');
      // Only render icon in product cards on collection pages
    })
    .catch(function() {
      // If metafields fetch fails, do not render icon
      // Optionally, you can skip calling renderWishlistIconAndFonts
    });
})();

// Load Smart Save script (will check metafields for settings)
(function() {
  var smartSaveScript = document.createElement('script');
  smartSaveScript.src = '{{ 'smart-save.js' | asset_url }}?v=' + Date.now();
  smartSaveScript.onload = function() {
    console.log('[WISHLIST CONFIG] Smart Save script loaded successfully');
  };
  smartSaveScript.onerror = function() {
    console.error('[WISHLIST CONFIG] Failed to load Smart Save script');
  };
  document.head.appendChild(smartSaveScript);
})();

</script>
{% schema %}
{
  "name": "Wishlist Configuration",
  "target": "body",
  "settings": [
    { "type": "image_picker", "id": "icon_add", "label": "Custom Icon for 'Add to Wishlist'" },
    { "type": "text", "id": "product_link_selector", "label": "Product Link Selector Collection Page", "default": ".card-wrapper" },
    { "type": "text", "id": "wislist_header_selector", "label": "Wishlist Header Selector", "default": ".header__icon--cart" },
    { "type": "text", "id": "wishlist_nav_selector", "label": "Wishlist Navigation Selector", "default": ".list-menu--inline" },
    { "type": "text", "id": "product_link_selector_product_page", "label": "Product Link Selector Product Image", "default": ".product-media-container" },
    { "type": "text", "id": "add_wishlist_selector", "label": "Add To Wishlist Selector Near Cart Button", "default": ".product-form__submit" },
    { "type": "text", "id": "wishlist_cart_item_selector", "label": "Cart Item Selector", "default": "tr.cart-item, div.cart-item" },
    { "type": "text", "id": "wishlist_cart_remove_selector", "label": "Cart Remove Button Selector", "default": "a.button--tertiary[aria-label*='Remove']" }
  ]
}
{% endschema %}

